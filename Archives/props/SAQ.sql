CREATE DATABASE TEST;
USE TEST;
SHOW DATABASES ;

-- TO SHOW USERS ON THIS SERVER
SELECT USER FROM MYSQL.USER;

-- TO CREATE A USER
CREATE USER IF NOT EXISTS SAQLAEN IDENTIFIED BY  'abc@123';

-- TO GRANT HIM PERMISSIONS
GRANT ALL PRIVILEGES ON *.* TO SAQLAEN; 
GRANT CREATE,ALTER,INSERT,SELECT ON *.* TO SAQLAEN;

-- TO CHECK THE PRIVILAGES 
SHOW GRANTS FOR SAQLAEN;

CREATE TABLE employee (
	id INT NOT NULL,
	name VARCHAR(20) NOT NULL);
				
TRUNCATE TABLE employee;
LOCK TABLE employee READ;

SHOW TABLES;
UNLOCK TABLEs;
-- SET FOREIGN_KEY_CHECKS = 1;
-- SET FOREIGN_KEY_CHECKS = 0;

CREATE VIEW VIEW_NAME AS
SELECT * FROM EMPLOYEE_DATA;

SELECT * FROM VIEW_NAME;

CREATE TEMPORARY TABLE EMP_COPY SELECT * FROM EMP LIMIT 0;
SELECT * FROM EMP_COPY;
DROP TEMPORARY TABLE EMP_COPY;

CREATE TABLE EMP (
	E_ID INT NOT NULL AUTO_INCREMENT,
	EMP_NAME VARCHAR(20),
    EMP_AGE INT,
    PRIMARY KEY(E_ID) );
    
DROP TABLE EMP ;

CREATE TABLE newTable 
	SELECT * FROM employee;

INSERT INTO EMP (EMP_NAME,EMP_AGE)  
	SELECT  Emp_Name,SALARY FROM employee;

SELECT * FROM EMP;

SELECT * FROM newTable;

-- DELETE DUPLICATE RECORDS USING INNER JOIN
DELETE E1 FROM EMP E1 
	INNER JOIN EMP E2 
	WHERE E1.E_ID > E2.E_ID 
	AND E1.EMP_NAME = E2.EMP_NAME;

ALTER TABLE EMPLOYEE_DATA ADD PRIMARY KEY(id);
ALTER TABLE EMPLOYEE_DATA ADD address VARCHAR(30);
ALTER TABLE EMPLOYEE_DATA RENAME COLUMN name to Emp_Name;
ALTER TABLE EMPLOYEE_DATA MODIFY COLUMN address VARCHAR(40);
ALTER TABLE EMPLOYEE_DATA MODIFY COLUMN id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE EMPLOYEE_DATA ADD COLUMN SALARY INT ;
ALTER TABLE EMPLOYEE_DATA RENAME COLUMN Emp_Name to EMP_NAME;
ALTER TABLE EMPLOYEE_DATA RENAME COLUMN address to ADDRESS;
ALTER TABLE EMPLOYEE_DATA RENAME COLUMN id to ID ;

INSERT INTO EMPLOYEE_DATA (EMP_NAME, ADDRESS, SALARY)
	VALUES ('ram','bihar',20000),
	('arjun','banglore',40000),
	('mohan','chandi',50000),
	('krishna','delhi',60000);

-- CREATING INDEX 
CREATE INDEX INDX_1 ON EMPLOYEE_DATA(SALARY);
SELECT * FROM EMPLOYEE_DATA USE INDEX(INDX_1);
DROP INDEX INDX_1 ON EMPLOYEE_DATA ;

SELECT * FROM EMPLOYEE_DATA;
SELECT * FROM EMPLOYEE_DATA WHERE id=1 ;
SELECT * FROM EMPLOYEE_DATA ORDER BY SALARY DESC;
SELECT * FROM EMPLOYEE_DATA GROUP BY SALARY;

-- TO DELETE DUPLICATE DATA FROM TABLE USING ROW NUMBER ()
DELETE FROM EMPLOYEE_DATA WHERE ID IN 
	( SELECT ID FROM  
    ( SELECT ID, ROW_NUMBER() OVER ( PARTITION BY EMP_NAME) AS RN FROM EMPLOYEE_DATA ) 
    AS ED2 WHERE RN > 1 ) ;
    
-- TO FIND DUPLICATE RECORDS
SELECT *,COUNT(*) FROM EMPLOYEE_DATA 
	GROUP BY EMP_NAME HAVING COUNT(*) > 1;
    
RENAME TABLE employee TO EMPLOYEE_DATA;

UPDATE EMPLOYEE_DATA SET SALARY = 90000 WHERE id = 4;

-- FIND NTH HIGHEST SALARY 
	SELECT * FROM EMPLOYEE_DATA AS E1
	WHERE 3-1 = (SELECT COUNT(DISTINCT SALARY) FROM EMPLOYEE_DATA AS E2 WHERE E1.SALARY > E2.SALARY);
DESC EMPLOYEE_DATA;